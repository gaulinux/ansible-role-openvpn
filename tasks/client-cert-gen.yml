---
- name: Define random password I
  action: "command openssl rand -base64 12"
  register: openvpn_user_passwd

- debug: msg="temporary password {{ openvpn_user_passwd.stdout_lines[0] }}"

- name: Define random passwordi II
  action: command python -c 'from passlib.hash import sha512_crypt; import sys; pw="{{ openvpn_user_passwd.stdout_lines[0] }}"; print sha512_crypt.encrypt(pw)'
  ignore_errors: true
  register: openvpn_user_passwd_crypted

- name: Create linux user
  user: >
    name={{ openvpn_client_cert_name }}
    state=present
    shell=/bin/bash
    password="{{ item }}"
    update_password=on_create

  with_items:
    - "{{ openvpn_user_passwd_crypted.stdout }}"

- name: Client certificate generation
  shell: >
         chdir={{ openvpn_easy_rsa_dir }}
         . {{ openvpn_easy_rsa_dir }}/vars  &&
         ./pkitool {{ openvpn_client_cert_name }} 

- name: Build client certificate package I
  shell: >
         chdir={{ openvpn_easy_rsa_dir }}/keys
         mkdir -p {{openvpn_client_cert_filename_prefix }}_{{ openvpn_client_cert_name }} &&
         cp {{ openvpn_client_cert_name }}.key {{openvpn_client_cert_filename_prefix }}_{{ openvpn_client_cert_name }} &&
         cp {{ openvpn_client_cert_name }}.crt {{openvpn_client_cert_filename_prefix }}_{{ openvpn_client_cert_name }} &&
         cp ca.crt {{openvpn_client_cert_filename_prefix }}_{{ openvpn_client_cert_name }}

- name: Push client.conf template
  template:
    src: "{{ openvpn_client_dot_conf_file }}"
    dest: "{{ openvpn_easy_rsa_dir }}/keys/{{openvpn_client_cert_filename_prefix }}_{{ openvpn_client_cert_name }}/{{openvpn_client_cert_filename_prefix }}_{{ openvpn_client_cert_name }}.ovpn"

- name: Push client_userinfo_file template
  template:
    src: "{{ openvpn_client_userinfo_file }}"
    dest: "{{ openvpn_easy_rsa_dir }}/keys/{{openvpn_client_cert_filename_prefix }}_{{ openvpn_client_cert_name }}/{{ openvpn_client_userinfo_file }}"

- name: Convert config files to DOS format
  shell: >
         unix2dos {{ openvpn_easy_rsa_dir }}/keys/{{openvpn_client_cert_filename_prefix }}_{{ openvpn_client_cert_name }}/{{openvpn_client_cert_filename_prefix }}_{{ openvpn_client_cert_name }}.ovpn &&
         unix2dos {{ openvpn_easy_rsa_dir }}/keys/{{openvpn_client_cert_filename_prefix }}_{{ openvpn_client_cert_name }}/{{ openvpn_client_userinfo_file }}

- name: Build client certificate package II
  shell: >
         chdir={{ openvpn_easy_rsa_dir }}/keys/
         zip -r {{openvpn_client_cert_filename_prefix }}_{{ openvpn_client_cert_name }} {{openvpn_client_cert_filename_prefix }}_{{ openvpn_client_cert_name }}

- name: Fetch client certificate package
  fetch: 
    src={{ openvpn_easy_rsa_dir }}/keys/{{openvpn_client_cert_filename_prefix }}_{{ openvpn_client_cert_name }}.zip
    dest={{ lookup('env', 'PWD') }}/{{openvpn_client_cert_filename_prefix }}_{{ openvpn_client_cert_name }}.zip
    flat=yes

